{"version":3,"sources":["jquery.pjax.js"],"names":["$","fnPjax","selector","container","options","context","this","on","event","opts","extend","history","optionsFor","attr","handleClick","link","currentTarget","data","tagName","toUpperCase","which","metaKey","ctrlKey","shiftKey","altKey","location","protocol","hostname","href","indexOf","stripHash","isDefaultPrevented","defaults","url","target","clickEvent","Event","trigger","pjax","preventDefault","handleSubmit","form","$form","type","undefined","window","FormData","processData","contentType","find","length","serializeArray","fire","args","props","relatedTarget","ajaxSettings","isFunction","hash","parseURL","findContainerFor","isArray","grep","obj","name","push","value","_pjax","timeoutTimer","beforeSend","xhr","settings","timeout","setRequestHeader","ieRedirectCompatibility","ua","navigator","userAgent","setTimeout","abort","requestUrl","stripInternalParams","complete","textStatus","clearTimeout","error","errorThrown","extractContainer","redirect","status","allowed","replaceRedirect","locationReplace","pushRedirect","pushState","replace","success","previousState","state","currentVersion","version","latestVersion","getResponseHeader","contents","id","uniqueId","title","fragment","cache","replaceState","contains","document","activeElement","blur","e","html","autofocusEl","last","focus","executeScriptTags","scripts","scrollTo","decodeURIComponent","slice","getElementById","getElementsByName","offset","top","scrollTop","readyState","skipOuterContainers","abortXHR","ajax","cachePush","cloneContents","pjaxReload","onPjaxPopstate","initialPop","direction","initialURL","cacheMapping","cachePop","popstateEvent","beforeReplaceEvent","offsetHeight","fallbackPjax","method","action","style","append","toLowerCase","each","split","index","pair","key","body","submit","onreadystatechange","noop","Date","getTime","cloned","clone","src","jQuery","_data","search","a","createElement","isPlainObject","findAll","elems","filter","add","parseHTML","fullDocument","test","serverUrl","$head","match","$body","text","$fragment","first","not","is","remove","trim","existingScripts","cb","next","getScript","done","fail","head","appendChild","i","script","call","cacheBackStack","trimCacheStack","cacheForwardStack","maxCacheLength","pushStack","popStack","pop","stack","shift","findVersion","enable","fn","disable","click","reload","dataType","off","initialState","inArray","support"],"mappings":"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","file":"jquery.pjax.js","sourcesContent":["/*!\n * Copyright 2012, Chris Wanstrath\n * Released under the MIT License\n * https://github.com/defunkt/jquery-pjax\n */\n\n(function($){\n\n// When called on a container with a selector, fetches the href with\n// ajax into the container or with the data-pjax attribute on the link\n// itself.\n//\n// Tries to make sure the back button and ctrl+click work the way\n// you'd expect.\n//\n// Exported as $.fn.pjax\n//\n// Accepts a jQuery ajax options object that may include these\n// pjax specific options:\n//\n//\n//               container - Where to stick the response body. Usually a String selector.\n//                           $(container).html(xhr.responseBody)\n//                           (default: current jquery context)\n//                    push - Whether to pushState the URL. Defaults to true (of course).\n//                 replace - Want to use replaceState instead? That's cool.\n//                 history - Work with window.history. Defaults to true\n//                   cache - Whether to cache pages HTML. Defaults to true\n//            pushRedirect - Whether to add a browser history entry upon redirect. Defaults to false.\n//         replaceRedirect - Whether to replace URL without adding a browser history entry upon redirect. Defaults to true.\n//     skipOuterContainers - When pjax containers are nested and this option is true,\n//                           the closest pjax block will handle the event. Otherwise, the top\n//                           container will handle the event. Defaults to false.\n// ieRedirectCompatibility - Whether to add `X-Ie-Redirect-Compatibility` header for the request on IE.\n//                           See https://github.com/yiisoft/jquery-pjax/issues/37\n//\n// For convenience the second parameter can be either the container or\n// the options object.\n//\n// Returns the jQuery object\nfunction fnPjax(selector, container, options) {\n  var context = this\n  return this.on('click.pjax', selector, function(event) {\n    var opts = $.extend({history: true}, optionsFor(container, options))\n    if (!opts.container)\n      opts.container = $(this).attr('data-pjax') || context\n    handleClick(event, opts)\n  })\n}\n\n// Public: pjax on click handler\n//\n// Exported as $.pjax.click.\n//\n// event   - \"click\" jQuery.Event\n// options - pjax options\n//\n// If the click event target has 'data-pjax=\"0\"' attribute, the event is ignored, and no pjax call is made.\n//\n// Examples\n//\n//   $(document).on('click', 'a', $.pjax.click)\n//   // is the same as\n//   $(document).pjax('a')\n//\n//  $(document).on('click', 'a', function(event) {\n//    var container = $(this).closest('[data-pjax-container]')\n//    $.pjax.click(event, container)\n//  })\n//\n// Returns nothing.\nfunction handleClick(event, container, options) {\n  options = optionsFor(container, options)\n\n  var link = event.currentTarget\n\n  // Ignore links with data-pjax=\"0\"\n  if ($(link).data('pjax') == 0) {\n    return;\n  }\n\n  if (link.tagName.toUpperCase() !== 'A')\n    throw \"$.fn.pjax or $.pjax.click requires an anchor element\"\n\n  // Middle click, cmd click, and ctrl click should open\n  // links in a new tab as normal.\n  if ( event.which > 1 || event.metaKey || event.ctrlKey || event.shiftKey || event.altKey )\n    return\n\n  // Ignore cross origin links\n  if ( location.protocol !== link.protocol || location.hostname !== link.hostname )\n    return\n\n  // Ignore case when a hash is being tacked on the current URL\n  if ( link.href.indexOf('#') > -1 && stripHash(link) == stripHash(location) )\n    return\n\n  // Ignore event with default prevented\n  if (event.isDefaultPrevented())\n    return\n\n  var defaults = {\n    url: link.href,\n    container: $(link).attr('data-pjax'),\n    target: link\n  }\n\n  var opts = $.extend({}, defaults, options)\n  var clickEvent = $.Event('pjax:click')\n  $(link).trigger(clickEvent, [opts])\n\n  if (!clickEvent.isDefaultPrevented()) {\n    pjax(opts)\n    event.preventDefault()\n    $(link).trigger('pjax:clicked', [opts])\n  }\n}\n\n// Public: pjax on form submit handler\n//\n// Exported as $.pjax.submit\n//\n// event   - \"click\" jQuery.Event\n// options - pjax options\n//\n// Examples\n//\n//  $(document).on('submit', 'form', function(event) {\n//    var container = $(this).closest('[data-pjax-container]')\n//    $.pjax.submit(event, container)\n//  })\n//\n// Returns nothing.\nfunction handleSubmit(event, container, options) {\n  options = optionsFor(container, options)\n\n  var form = event.currentTarget\n  var $form = $(form)\n\n  if (form.tagName.toUpperCase() !== 'FORM')\n    throw \"$.pjax.submit requires a form element\"\n\n  var defaults = {\n    type: ($form.attr('method') || 'GET').toUpperCase(),\n    url: $form.attr('action'),\n    container: $form.attr('data-pjax'),\n    target: form\n  }\n\n  if (defaults.type !== 'GET' && window.FormData !== undefined) {\n    defaults.data = new FormData(form);\n    defaults.processData = false;\n    defaults.contentType = false;\n  } else {\n    // Can't handle file uploads, exit\n    if ($(form).find(':file').length) {\n      return;\n    }\n\n    // Fallback to manually serializing the fields\n    defaults.data = $(form).serializeArray();\n  }\n\n  pjax($.extend({}, defaults, options))\n\n  event.preventDefault()\n}\n\n// Loads a URL with ajax, puts the response body inside a container,\n// then pushState()'s the loaded URL.\n//\n// Works just like $.ajax in that it accepts a jQuery ajax\n// settings object (with keys like url, type, data, etc).\n//\n// Accepts these extra keys:\n//\n// container - Where to stick the response body.\n//             $(container).html(xhr.responseBody)\n//      push - Whether to pushState the URL. Defaults to true (of course).\n//   replace - Want to use replaceState instead? That's cool.\n//\n// Use it just like $.ajax:\n//\n//   var xhr = $.pjax({ url: this.href, container: '#main' })\n//   console.log( xhr.readyState )\n//\n// Returns whatever $.ajax returns.\nfunction pjax(options) {\n  options = $.extend(true, {}, $.ajaxSettings, pjax.defaults, options)\n\n  if ($.isFunction(options.url)) {\n    options.url = options.url()\n  }\n\n  var target = options.target\n\n  var hash = parseURL(options.url).hash\n\n  var context = options.context = findContainerFor(options.container)\n\n  // We want the browser to maintain two separate internal caches: one\n  // for pjax'd partial page loads and one for normal page loads.\n  // Without adding this secret parameter, some browsers will often\n  // confuse the two.\n  if (!options.data) options.data = {}\n  if ($.isArray(options.data)) {\n    options.data = $.grep(options.data, function(obj) { return '_pjax' !== obj.name })\n    options.data.push({name: '_pjax', value: context.selector})\n  } else {\n    options.data._pjax = context.selector\n  }\n\n  function fire(type, args, props) {\n    if (!props) props = {}\n    props.relatedTarget = target\n    var event = $.Event(type, props)\n    context.trigger(event, args)\n    return !event.isDefaultPrevented()\n  }\n\n  var timeoutTimer\n\n  options.beforeSend = function(xhr, settings) {\n    // No timeout for non-GET requests\n    // Its not safe to request the resource again with a fallback method.\n    if (settings.type !== 'GET') {\n      settings.timeout = 0\n    }\n\n    xhr.setRequestHeader('X-PJAX', 'true')\n    xhr.setRequestHeader('X-PJAX-Container', context.selector)\n\n    if (settings.ieRedirectCompatibility) {\n      var ua = window.navigator.userAgent\n      if (ua.indexOf('MSIE ') > 0 || ua.indexOf('Trident/') > 0 || ua.indexOf('Edge/') > 0) {\n        xhr.setRequestHeader('X-Ie-Redirect-Compatibility', 'true')\n      }\n    }\n\n    if (!fire('pjax:beforeSend', [xhr, settings]))\n      return false\n\n    if (settings.timeout > 0) {\n      timeoutTimer = setTimeout(function() {\n        if (fire('pjax:timeout', [xhr, options]))\n          xhr.abort('timeout')\n      }, settings.timeout)\n\n      // Clear timeout setting so jquerys internal timeout isn't invoked\n      settings.timeout = 0\n    }\n\n    var url = parseURL(settings.url)\n    if (hash) url.hash = hash\n    options.requestUrl = stripInternalParams(url)\n  }\n\n  options.complete = function(xhr, textStatus) {\n    if (timeoutTimer)\n      clearTimeout(timeoutTimer)\n\n    fire('pjax:complete', [xhr, textStatus, options])\n\n    fire('pjax:end', [xhr, options])\n  }\n\n  options.error = function(xhr, textStatus, errorThrown) {\n    var container = extractContainer(\"\", xhr, options)\n    // Check redirect status code\n    var redirect = (xhr.status >= 301 && xhr.status <= 303)\n    // Do not fire pjax::error in case of redirect\n    var allowed = redirect || fire('pjax:error', [xhr, textStatus, errorThrown, options])\n    if (redirect || options.type == 'GET' && textStatus !== 'abort' && allowed) {\n      if (options.replaceRedirect) {\n        locationReplace(container.url)\n      } else if (options.pushRedirect) {\n        window.history.pushState(null, \"\", container.url)\n        window.location.replace(container.url)\n      }\n    }\n  }\n\n  options.success = function(data, status, xhr) {\n    var previousState = pjax.state;\n\n    // If $.pjax.defaults.version is a function, invoke it first.\n    // Otherwise it can be a static string.\n    var currentVersion = (typeof $.pjax.defaults.version === 'function') ?\n      $.pjax.defaults.version() :\n      $.pjax.defaults.version\n\n    var latestVersion = xhr.getResponseHeader('X-PJAX-Version')\n\n    var container = extractContainer(data, xhr, options)\n\n    var url = parseURL(container.url)\n    if (hash) {\n      url.hash = hash\n      container.url = url.href\n    }\n\n    // If there is a layout version mismatch, hard load the new url\n    if (currentVersion && latestVersion && currentVersion !== latestVersion) {\n      locationReplace(container.url)\n      return\n    }\n\n    // If the new response is missing a body, hard load the page\n    if (!container.contents) {\n      locationReplace(container.url)\n      return\n    }\n\n    pjax.state = {\n      id: options.id || uniqueId(),\n      url: container.url,\n      title: container.title,\n      container: context.selector,\n      fragment: options.fragment,\n      timeout: options.timeout,\n      cache: options.cache\n    }\n\n    if (options.history && (options.push || options.replace)) {\n      window.history.replaceState(pjax.state, container.title, container.url)\n    }\n\n    // Only blur the focus if the focused element is within the container.\n    var blurFocus = $.contains(options.container, document.activeElement)\n\n    // Clear out any focused controls before inserting new page contents.\n    if (blurFocus) {\n      try {\n        document.activeElement.blur()\n      } catch (e) { }\n    }\n\n    if (container.title) document.title = container.title\n\n    fire('pjax:beforeReplace', [container.contents, options], {\n      state: pjax.state,\n      previousState: previousState\n    })\n    context.html(container.contents)\n\n    // FF bug: Won't autofocus fields that are inserted via JS.\n    // This behavior is incorrect. So if theres no current focus, autofocus\n    // the last field.\n    //\n    // http://www.w3.org/html/wg/drafts/html/master/forms.html\n    var autofocusEl = context.find('input[autofocus], textarea[autofocus]').last()[0]\n    if (autofocusEl && document.activeElement !== autofocusEl) {\n      autofocusEl.focus();\n    }\n\n    executeScriptTags(container.scripts, context)\n\n    var scrollTo = options.scrollTo\n\n    // Ensure browser scrolls to the element referenced by the URL anchor\n    if (hash) {\n      var name = decodeURIComponent(hash.slice(1))\n      var target = document.getElementById(name) || document.getElementsByName(name)[0]\n      if (target) scrollTo = $(target).offset().top\n    }\n\n    if (typeof scrollTo == 'number') $(window).scrollTop(scrollTo)\n\n    fire('pjax:success', [data, status, xhr, options])\n  }\n\n\n  // Initialize pjax.state for the initial page load. Assume we're\n  // using the container and options of the link we're loading for the\n  // back button to the initial page. This ensures good back button\n  // behavior.\n  if (!pjax.state) {\n    pjax.state = {\n      id: uniqueId(),\n      url: window.location.href,\n      title: document.title,\n      container: context.selector,\n      fragment: options.fragment,\n      timeout: options.timeout,\n      cache: options.cache\n    }\n    window.history.replaceState(pjax.state, document.title)\n  }\n\n  // New request can not override the existing one when option skipOuterContainers is set to true\n  if (pjax.xhr && pjax.xhr.readyState < 4 && pjax.options.skipOuterContainers) {\n    return\n  }\n  // Cancel the current request if we're already pjaxing\n  abortXHR(pjax.xhr)\n\n  pjax.options = options\n  var xhr = pjax.xhr = $.ajax(options)\n\n  if (xhr.readyState > 0) {\n    if (options.history && (options.push && !options.replace)) {\n      // Cache current container element before replacing it\n      cachePush(pjax.state.id, cloneContents(context))\n\n      window.history.pushState(null, \"\", options.requestUrl)\n    }\n\n    fire('pjax:start', [xhr, options])\n    fire('pjax:send', [xhr, options])\n  }\n\n  return pjax.xhr\n}\n\n// Public: Reload current page with pjax.\n//\n// Returns whatever $.pjax returns.\nfunction pjaxReload(container, options) {\n  var defaults = {\n    url: window.location.href,\n    push: false,\n    replace: true,\n    scrollTo: false\n  }\n\n  return pjax($.extend(defaults, optionsFor(container, options)))\n}\n\n// Internal: Hard replace current state with url.\n//\n// Work for around WebKit\n//   https://bugs.webkit.org/show_bug.cgi?id=93506\n//\n// Returns nothing.\nfunction locationReplace(url) {\n  if (!pjax.options.history) return;\n  window.history.replaceState(null, \"\", pjax.state.url)\n  window.location.replace(url)\n}\n\n\nvar initialPop = true\nvar initialURL = window.location.href\nvar initialState = window.history.state\n\n// Initialize $.pjax.state if possible\n// Happens when reloading a page and coming forward from a different\n// session history.\nif (initialState && initialState.container) {\n  pjax.state = initialState\n}\n\n// Non-webkit browsers don't fire an initial popstate event\nif ('state' in window.history) {\n  initialPop = false\n}\n\n// popstate handler takes care of the back and forward buttons\n//\n// You probably shouldn't use pjax on pages with other pushState\n// stuff yet.\nfunction onPjaxPopstate(event) {\n\n  // Hitting back or forward should override any pending PJAX request.\n  if (!initialPop) {\n    abortXHR(pjax.xhr)\n  }\n\n  var previousState = pjax.state\n  var state = event.state\n  var direction\n\n  if (state && state.container) {\n    // When coming forward from a separate history session, will get an\n    // initial pop with a state we are already at. Skip reloading the current\n    // page.\n    if (initialPop && initialURL == state.url) return\n\n    if (previousState) {\n      // If popping back to the same state, just skip.\n      // Could be clicking back from hashchange rather than a pushState.\n      if (previousState.id === state.id) return\n\n      // Since state IDs always increase, we can deduce the navigation direction\n      direction = previousState.id < state.id ? 'forward' : 'back'\n    }\n\n    var cache = cacheMapping[state.id] || []\n    var container = $(cache[0] || state.container), contents = cache[1]\n\n    if (container.length) {\n      var options = {\n        id: state.id,\n        url: state.url,\n        container: container,\n        push: false,\n        fragment: state.fragment,\n        timeout: state.timeout,\n        cache: state.cache,\n        scrollTo: false\n      }\n\n      if (previousState && options.cache) {\n        // Cache current container before replacement and inform the\n        // cache which direction the history shifted.\n        cachePop(direction, previousState.id, cloneContents(container))\n      }\n\n      var popstateEvent = $.Event('pjax:popstate', {\n        state: state,\n        direction: direction\n      })\n      container.trigger(popstateEvent)\n\n      if (contents) {\n        container.trigger('pjax:start', [null, options])\n\n        pjax.state = state\n        if (state.title) document.title = state.title\n        var beforeReplaceEvent = $.Event('pjax:beforeReplace', {\n          state: state,\n          previousState: previousState\n        })\n        container.trigger(beforeReplaceEvent, [contents, options])\n        container.html(contents)\n\n        container.trigger('pjax:end', [null, options])\n      } else {\n        pjax(options)\n      }\n\n      // Force reflow/relayout before the browser tries to restore the\n      // scroll position.\n      container[0].offsetHeight\n    } else {\n      locationReplace(location.href)\n    }\n  }\n  initialPop = false\n}\n\n// Fallback version of main pjax function for browsers that don't\n// support pushState.\n//\n// Returns nothing since it retriggers a hard form submission.\nfunction fallbackPjax(options) {\n  var url = $.isFunction(options.url) ? options.url() : options.url,\n      method = options.type ? options.type.toUpperCase() : 'GET'\n\n  var form = $('<form>', {\n    method: method === 'GET' ? 'GET' : 'POST',\n    action: url,\n    style: 'display:none'\n  })\n\n  if (method !== 'GET' && method !== 'POST') {\n    form.append($('<input>', {\n      type: 'hidden',\n      name: '_method',\n      value: method.toLowerCase()\n    }))\n  }\n\n  var data = options.data\n  if (typeof data === 'string') {\n    $.each(data.split('&'), function(index, value) {\n      var pair = value.split('=')\n      form.append($('<input>', {type: 'hidden', name: pair[0], value: pair[1]}))\n    })\n  } else if ($.isArray(data)) {\n    $.each(data, function(index, value) {\n      form.append($('<input>', {type: 'hidden', name: value.name, value: value.value}))\n    })\n  } else if (typeof data === 'object') {\n    var key\n    for (key in data)\n      form.append($('<input>', {type: 'hidden', name: key, value: data[key]}))\n  }\n\n  $(document.body).append(form)\n  form.submit()\n}\n\n// Internal: Abort an XmlHttpRequest if it hasn't been completed,\n// also removing its event handlers.\nfunction abortXHR(xhr) {\n  if ( xhr && xhr.readyState < 4) {\n    xhr.onreadystatechange = $.noop\n    xhr.abort()\n  }\n}\n\n// Internal: Generate unique id for state object.\n//\n// Use a timestamp instead of a counter since ids should still be\n// unique across page loads.\n//\n// Returns Number.\nfunction uniqueId() {\n  return (new Date).getTime()\n}\n\nfunction cloneContents(container) {\n  var cloned = container.clone()\n  // Unmark script tags as already being eval'd so they can get executed again\n  // when restored from cache. HAXX: Uses jQuery internal method.\n  cloned.find('script').each(function(){\n    if (!this.src) jQuery._data(this, 'globalEval', false)\n  })\n  return [container.selector, cloned.contents()]\n}\n\n// Internal: Strip internal query params from parsed URL.\n//\n// Returns sanitized url.href String.\nfunction stripInternalParams(url) {\n  url.search = url.search.replace(/([?&])(_pjax|_)=[^&]*/g, '')\n  return url.href.replace(/\\?($|#)/, '$1')\n}\n\n// Internal: Parse URL components and returns a Locationish object.\n//\n// url - String URL\n//\n// Returns HTMLAnchorElement that acts like Location.\nfunction parseURL(url) {\n  var a = document.createElement('a')\n  a.href = url\n  return a\n}\n\n// Internal: Return the `href` component of given URL object with the hash\n// portion removed.\n//\n// location - Location or HTMLAnchorElement\n//\n// Returns String\nfunction stripHash(location) {\n  return location.href.replace(/#.*/, '')\n}\n\n// Internal: Build options Object for arguments.\n//\n// For convenience the first parameter can be either the container or\n// the options object.\n//\n// Examples\n//\n//   optionsFor('#container')\n//   // => {container: '#container'}\n//\n//   optionsFor('#container', {push: true})\n//   // => {container: '#container', push: true}\n//\n//   optionsFor({container: '#container', push: true})\n//   // => {container: '#container', push: true}\n//\n// Returns options Object.\nfunction optionsFor(container, options) {\n  // Both container and options\n  if ( container && options )\n    options.container = container\n\n  // First argument is options Object\n  else if ( $.isPlainObject(container) )\n    options = container\n\n  // Only container\n  else\n    options = {container: container}\n\n  // Find and validate container\n  if (options.container)\n    options.container = findContainerFor(options.container)\n\n  return options\n}\n\n// Internal: Find container element for a variety of inputs.\n//\n// Because we can't persist elements using the history API, we must be\n// able to find a String selector that will consistently find the Element.\n//\n// container - A selector String, jQuery object, or DOM Element.\n//\n// Returns a jQuery object whose context is `document` and has a selector.\nfunction findContainerFor(container) {\n  container = $(container)\n\n  if ( !container.length ) {\n    throw \"no pjax container for \" + container.selector\n  } else if ( container.selector !== '' && container.context === document ) {\n    return container\n  } else if ( container.attr('id') ) {\n    return $('#' + container.attr('id'))\n  } else {\n    throw \"cant get selector for pjax container!\"\n  }\n}\n\n// Internal: Filter and find all elements matching the selector.\n//\n// Where $.fn.find only matches descendants, findAll will test all the\n// top level elements in the jQuery object as well.\n//\n// elems    - jQuery object of Elements\n// selector - String selector to match\n//\n// Returns a jQuery object.\nfunction findAll(elems, selector) {\n  return elems.filter(selector).add(elems.find(selector));\n}\n\nfunction parseHTML(html) {\n  return $.parseHTML(html, document, true)\n}\n\n// Internal: Extracts container and metadata from response.\n//\n// 1. Extracts X-PJAX-URL header if set\n// 2. Extracts inline <title> tags\n// 3. Builds response Element and extracts fragment if set\n//\n// data    - String response data\n// xhr     - XHR response\n// options - pjax options Object\n//\n// Returns an Object with url, title, and contents keys.\nfunction extractContainer(data, xhr, options) {\n  var obj = {}, fullDocument = /<html/i.test(data)\n\n  // Prefer X-PJAX-URL header if it was set, otherwise fallback to\n  // using the original requested url.\n  var serverUrl = xhr.getResponseHeader('X-PJAX-URL')\n  obj.url = serverUrl ? stripInternalParams(parseURL(serverUrl)) : options.requestUrl\n\n  // Attempt to parse response html into elements\n  if (fullDocument) {\n    var $head = $(parseHTML(data.match(/<head[^>]*>([\\s\\S.]*)<\\/head>/i)[0]))\n    var $body = $(parseHTML(data.match(/<body[^>]*>([\\s\\S.]*)<\\/body>/i)[0]))\n  } else {\n    var $head = $body = $(parseHTML(data))\n  }\n\n  // If response data is empty, return fast\n  if ($body.length === 0)\n    return obj\n\n  // If there's a <title> tag in the header, use it as\n  // the page's title.\n  obj.title = findAll($head, 'title').last().text()\n\n  if (options.fragment) {\n    // If they specified a fragment, look for it in the response\n    // and pull it out.\n    if (options.fragment === 'body') {\n      var $fragment = $body\n    } else {\n      var $fragment = findAll($body, options.fragment).first()\n    }\n\n    if ($fragment.length) {\n      obj.contents = options.fragment === 'body' ? $fragment : $fragment.contents()\n\n      // If there's no title, look for data-title and title attributes\n      // on the fragment\n      if (!obj.title)\n        obj.title = $fragment.attr('title') || $fragment.data('title')\n    }\n\n  } else if (!fullDocument) {\n    obj.contents = $body\n  }\n\n  // Clean up any <title> tags\n  if (obj.contents) {\n    // Remove any parent title elements\n    obj.contents = obj.contents.not(function() { return $(this).is('title') })\n\n    // Then scrub any titles from their descendants\n    obj.contents.find('title').remove()\n\n    // Gather all script elements\n    obj.scripts = findAll(obj.contents, 'script').remove()\n    obj.contents = obj.contents.not(obj.scripts)\n  }\n\n  // Trim any whitespace off the title\n  if (obj.title) obj.title = $.trim(obj.title)\n\n  return obj\n}\n\n// Load an execute scripts using standard script request.\n//\n// Avoids jQuery's traditional $.getScript which does a XHR request and\n// globalEval.\n//\n// scripts - jQuery object of script Elements\n// context - jQuery object whose context is `document` and has a selector\n//\n// Returns nothing.\nfunction executeScriptTags(scripts, context) {\n  if (!scripts) return\n\n  var existingScripts = $('script[src]')\n\n  var cb = function (next) {\n    var src = this.src\n    var matchedScripts = existingScripts.filter(function () {\n      return this.src === src\n    })\n\n    if (matchedScripts.length) {\n      next()\n      return\n    }\n\n    if (src) {\n      $.getScript(src).done(next).fail(next)\n      document.head.appendChild(this)\n    } else {\n      context.append(this)\n      next()\n    }\n  }\n\n  var i = 0;\n  var next = function () {\n    if (i >= scripts.length) {\n      return\n    }\n    var script = scripts[i]\n    i++\n    cb.call(script, next)\n  }\n  next()\n}\n\n// Internal: History DOM caching class.\nvar cacheMapping      = {}\nvar cacheForwardStack = []\nvar cacheBackStack    = []\n\n// Push previous state id and container contents into the history\n// cache. Should be called in conjunction with `pushState` to save the\n// previous container contents.\n//\n// id    - State ID Number\n// value - DOM Element to cache\n//\n// Returns nothing.\nfunction cachePush(id, value) {\n  if (!pjax.options.cache) {\n    return;\n  }\n  cacheMapping[id] = value\n  cacheBackStack.push(id)\n\n  // Remove all entries in forward history stack after pushing a new page.\n  trimCacheStack(cacheForwardStack, 0)\n\n  // Trim back history stack to max cache length.\n  trimCacheStack(cacheBackStack, pjax.defaults.maxCacheLength)\n}\n\n// Shifts cache from directional history cache. Should be\n// called on `popstate` with the previous state id and container\n// contents.\n//\n// direction - \"forward\" or \"back\" String\n// id        - State ID Number\n// value     - DOM Element to cache\n//\n// Returns nothing.\nfunction cachePop(direction, id, value) {\n  var pushStack, popStack\n  cacheMapping[id] = value\n\n  if (direction === 'forward') {\n    pushStack = cacheBackStack\n    popStack  = cacheForwardStack\n  } else {\n    pushStack = cacheForwardStack\n    popStack  = cacheBackStack\n  }\n\n  pushStack.push(id)\n  if (id = popStack.pop())\n    delete cacheMapping[id]\n\n  // Trim whichever stack we just pushed to to max cache length.\n  trimCacheStack(pushStack, pjax.defaults.maxCacheLength)\n}\n\n// Trim a cache stack (either cacheBackStack or cacheForwardStack) to be no\n// longer than the specified length, deleting cached DOM elements as necessary.\n//\n// stack  - Array of state IDs\n// length - Maximum length to trim to\n//\n// Returns nothing.\nfunction trimCacheStack(stack, length) {\n  while (stack.length > length)\n    delete cacheMapping[stack.shift()]\n}\n\n// Public: Find version identifier for the initial page load.\n//\n// Returns String version or undefined.\nfunction findVersion() {\n  return $('meta').filter(function() {\n    var name = $(this).attr('http-equiv')\n    return name && name.toUpperCase() === 'X-PJAX-VERSION'\n  }).attr('content')\n}\n\n// Install pjax functions on $.pjax to enable pushState behavior.\n//\n// Does nothing if already enabled.\n//\n// Examples\n//\n//     $.pjax.enable()\n//\n// Returns nothing.\nfunction enable() {\n  $.fn.pjax = fnPjax\n  $.pjax = pjax\n  $.pjax.enable = $.noop\n  $.pjax.disable = disable\n  $.pjax.click = handleClick\n  $.pjax.submit = handleSubmit\n  $.pjax.reload = pjaxReload\n  $.pjax.defaults = {\n\thistory: true,\n\tcache: true,\n    timeout: 650,\n    push: true,\n    replace: false,\n    type: 'GET',\n    dataType: 'html',\n    scrollTo: 0,\n    maxCacheLength: 20,\n    version: findVersion,\n    pushRedirect: false,\n    replaceRedirect: true,\n    skipOuterContainers: false,\n    ieRedirectCompatibility: true\n  }\n  $(window).on('popstate.pjax', onPjaxPopstate)\n}\n\n// Disable pushState behavior.\n//\n// This is the case when a browser doesn't support pushState. It is\n// sometimes useful to disable pushState for debugging on a modern\n// browser.\n//\n// Examples\n//\n//     $.pjax.disable()\n//\n// Returns nothing.\nfunction disable() {\n  $.fn.pjax = function() { return this }\n  $.pjax = fallbackPjax\n  $.pjax.enable = enable\n  $.pjax.disable = $.noop\n  $.pjax.click = $.noop\n  $.pjax.submit = $.noop\n  $.pjax.reload = function() { window.location.reload() }\n\n  $(window).off('popstate.pjax', onPjaxPopstate)\n}\n\n\n// Add the state property to jQuery's event object so we can use it in\n// $(window).bind('popstate')\nif ( $.inArray('state', $.event.props) < 0 )\n  $.event.props.push('state')\n\n// Is pjax supported by this browser?\n$.support.pjax =\n  window.history && window.history.pushState && window.history.replaceState &&\n  // pushState isn't reliable on iOS until 5.\n  !navigator.userAgent.match(/((iPod|iPhone|iPad).+\\bOS\\s+[1-4]\\D|WebApps\\/.+CFNetwork)/)\n\n$.support.pjax ? enable() : disable()\n\n})(jQuery);\n\n"]}