{% requireAdmin %}

{% extends "_layouts/cp" %}
{% set title = "Fields"|t('app') %}

{% do view.registerAssetBundle('craft\\web\\assets\\admintable\\AdminTableAsset') -%}

{% do view.registerTranslations('app', [
    "Name",
    "Handle",
    "Type",
    "This field’s values are used as search keywords.",
    "No fields exist yet.",
]) %}

{% set crumbs = [
    { label: "Settings"|t('app'), url: url('settings') }
] %}

{% set emptyMessage = "No fields exist yet."|t('app') %}
{% set fields = craft.app.fields.getAllFields() %}


{% block actionButton %}
    {% set newFieldUrl = url('settings/fields/new') %}
    <a href="{{ newFieldUrl }}" class="submit btn add icon">{{ "New field"|t('app') }}</a>
{% endblock %}


{% block content %}
    <div id="fields-vue-admin-table"></div>
{% endblock %}

{% set tableData = [] %}
{% for field in fields %}
    {% set fieldIsMissing = false %}

    {% if field is missing %}
        {% set fieldIsMissing = true %}
    {% endif %}

    {% set tableData = tableData|merge([{
        id: field.id,
        title: field.name|t('site'),
        translatable: field.getIsTranslatable(null) ? (field.getTranslationDescription(null) ?? 'This field is translatable.'|t('app')),
        searchable: field.searchable ? true : false,
        url: url('settings/fields/edit/' ~ field.id),
        handle: field.handle,
        type: {
            isMissing: fieldIsMissing,
            label: fieldIsMissing ? field.expectedType : field.displayName()
        },
    }]) %}
{% endfor %}

{% js %}
    var columns = [
        { name: '__slot:title', title: Craft.t('app', 'Name') },
        {
            name: 'searchable',
            titleClass: 'thin',
            callback: value => {
                if (!value) {
                    return null;
                }
                return `<div class="badge-icon" data-icon="search" title="${Craft.t('app', 'This field’s values are used as search keywords.')}" aria-label="${Craft.t('app', 'This field’s values are used as search keywords.')}" role="img"></div>`;
            }
        },
        {% if craft.app.isMultiSite %}
        {
            name: 'translatable',
            titleClass: 'thin',
            callback: value => {
                if (!value) {
                    return null;
                }
                return `<div class="badge-icon" data-icon="language" title="${value}" aria-label="${value}" role="img"></div>`;
            }
        },
        {% endif %}
        { name: '__slot:handle', title: Craft.t('app', 'Handle') },
        {
            name: 'type',
            title: Craft.t('app', 'Type'),
            callback: function(value) {
                if (value.isMissing) {
                    return '<span class="error">' + value.label + '</span>'
                }

                return value.label
            }
        },
    ];

    new Craft.VueAdminTable({
        columns: columns,
        container: '#fields-vue-admin-table',
        deleteAction: 'fields/delete-field',
        emptyMessage: Craft.t('app', '{{ emptyMessage }}'),
        tableData: {{ tableData|json_encode|raw }},
    });
{% endjs %}
