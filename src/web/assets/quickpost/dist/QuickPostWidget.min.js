!function(o){Craft.QuickPostWidget=Garnish.Base.extend({params:null,initFields:null,$widget:null,$form:null,$formClone:null,$spinner:null,$errorList:null,loading:!1,init:function(t,i,r){this.params=i,this.initFields=r,this.$widget=o("#widget"+t);var e=this.$widget.find("form:first");this.$formClone=e.clone(),this.initForm(e)},initForm:function(t){this.$form=t,this.$spinner=this.$form.find(".spinner"),this.initFields();var i=this.$form.find("> .buttons > .btngroup > .menubtn"),r=i.next().find("> ul > li > a");i.menubtn(),this.addListener(this.$form,"submit","handleFormSubmit"),this.addListener(r,"click","saveAndContinueEditing")},handleFormSubmit:function(t){t.preventDefault(),this.save(o.proxy(this,"onSave"))},saveAndContinueEditing:function(){this.save(o.proxy(this,"gotoEntry"))},save:function(s){if(!this.loading){this.loading=!0,this.$spinner.removeClass("hidden");var t=Garnish.getPostData(this.$form),i=o.extend({enabled:1},t,this.params);Craft.postActionRequest("entries/save-entry",i,o.proxy(function(t,i){if(this.loading=!1,this.$spinner.addClass("hidden"),this.$errorList&&this.$errorList.children().remove(),"success"===i)if(t.success)Craft.cp.displayNotice(Craft.t("app","Entry saved.")),s(t);else if(Craft.cp.displayError(Craft.t("app","Couldnâ€™t save entry.")),t.errors)for(var r in this.$errorList||(this.$errorList=o('<ul class="errors"/>').insertAfter(this.$form)),t.errors)if(t.errors.hasOwnProperty(r))for(var e=0;e<t.errors[r].length;e++){var n=t.errors[r][e];o("<li>"+n+"</li>").appendTo(this.$errorList)}},this))}},onSave:function(t){var i=this.$formClone.clone();if(this.$form.replaceWith(i),this.initForm(i),void 0!==Craft.RecentEntriesWidget)for(var r=0;r<Craft.RecentEntriesWidget.instances.length;r++){var e=Craft.RecentEntriesWidget.instances[r];e.params.sectionId&&e.params.sectionId!=this.params.sectionId||e.addEntry({url:t.cpEditUrl,title:t.title,dateCreated:t.dateCreated,username:t.authorUsername})}},gotoEntry:function(t){Craft.redirectTo(t.cpEditUrl)}})}(jQuery);
//# sourceMappingURL=QuickPostWidget.min.js.map