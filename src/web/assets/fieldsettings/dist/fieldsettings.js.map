{"version":3,"file":"fieldsettings.js","mappings":"YAAA,IAAWA,IA8FRC,OA3FDC,MAAMC,oBAAsBC,QAAQC,KAAKC,OACvC,CACEC,QAAS,KACTC,WAAY,KACZC,UAAW,KACXC,YAAa,KACbC,aAAc,KAEdC,aAAc,KACdC,sBAAsB,EAEtBC,KAAM,SAAUC,EAAQC,EAAWP,EAAWQ,GAC5CC,KAAKX,QAAUP,EAAEe,GACjBG,KAAKV,WAAaR,EAAEgB,GACpBE,KAAKT,UAAYA,EACjBS,KAAKR,YAAcQ,KAAKX,QAAQY,MAChCD,KAAKP,aAAe,CAAC,EACrBO,KAAKE,YAAYH,EAAUf,MAAMC,oBAAoBkB,UACrDH,KAAKI,YAAYJ,KAAKX,QAAS,SAAU,qBAC3C,EAEAgB,mBAAoB,WAAY,WAiB9B,GAfIL,KAAKN,eACPM,KAAKL,sBAAuB,EAC5BK,KAAKN,aAAaY,SAClBpB,QAAQqB,uBAAsB,WAC5B,EAAKZ,sBAAuB,CAC9B,KAIFK,KAAKP,aAAaO,KAAKR,aAAeQ,KAAKV,WACxCkB,WACAC,SAEHT,KAAKR,YAAcQ,KAAKX,QAAQY,WAEmB,IAAxCD,KAAKP,aAAaO,KAAKR,aAAlC,CAMAQ,KAAKV,WAAWoB,KACd,wDAIFV,KAAKN,aAAeiB,MAAMC,YAAYC,SAEtC,IAAIC,EAAO,CACTC,KAAMf,KAAKR,aAETQ,KAAKT,YACPuB,EAAKvB,UAAYS,KAAKT,UAAUyB,QAC9B,YACAhC,MAAMiC,cAAcjB,KAAKR,eAI7BR,MAAMkC,kBAAkB,OAAQ,yBAA0B,CACxDC,YAAanB,KAAKN,aAAa0B,MAC/BN,KAAMA,IAELO,MAAK,SAACC,GACL,IAAIC,EAAYzC,EAAEwC,EAASR,KAAKU,cAAgB,IAC5C,EAAKzB,SAAS0B,uBAChBF,EAAYzC,EAAE,SAAU,CACtB4C,GAAI1C,MAAMiC,cAAc,EAAKzB,eAC5BmC,OAAOJ,IAEZ,EAAKjC,WAAWoB,KAAK,IAAIiB,OAAOJ,GAChCvC,MAAM4C,eAAe,EAAKtC,YAC1BN,MAAM6C,eAAeP,EAASR,KAAKgB,UACnC9C,MAAM+C,eAAeT,EAASR,KAAKkB,SACrC,IAAE,OACK,WACA,EAAKrC,uBACRX,MAAMiD,GAAGC,aAAalD,MAAMmD,EAAE,MAAO,6BACrC,EAAK7C,WAAWoB,KAAK,IAEzB,GAzCF,MAFEV,KAAKP,aAAaO,KAAKR,aAAa4C,SAASpC,KAAKV,WA4CtD,GAEF,CACEa,SAAU,CACRsB,sBAAsB,I","sources":["webpack:///./fieldsettings.js"],"sourcesContent":["(function ($) {\n  /** global: Craft */\n  /** global: Garnish */\n  Craft.FieldSettingsToggle = Garnish.Base.extend(\n    {\n      $toggle: null,\n      $container: null,\n      namespace: null,\n      currentType: null,\n      typeSettings: null,\n\n      _cancelToken: null,\n      _ignoreFailedRequest: false,\n\n      init: function (toggle, container, namespace, settings) {\n        this.$toggle = $(toggle);\n        this.$container = $(container);\n        this.namespace = namespace;\n        this.currentType = this.$toggle.val();\n        this.typeSettings = {};\n        this.setSettings(settings, Craft.FieldSettingsToggle.defaults);\n        this.addListener(this.$toggle, 'change', 'handleToggleChange');\n      },\n\n      handleToggleChange: function () {\n        // Cancel the current request\n        if (this._cancelToken) {\n          this._ignoreFailedRequest = true;\n          this._cancelToken.cancel();\n          Garnish.requestAnimationFrame(() => {\n            this._ignoreFailedRequest = false;\n          });\n        }\n\n        // Save & detach the current settings\n        this.typeSettings[this.currentType] = this.$container\n          .children()\n          .detach();\n\n        this.currentType = this.$toggle.val();\n\n        if (typeof this.typeSettings[this.currentType] !== 'undefined') {\n          this.typeSettings[this.currentType].appendTo(this.$container);\n          return;\n        }\n\n        // Show a spinner\n        this.$container.html(\n          '<div class=\"zilch\"><div class=\"spinner\"></div></div>'\n        );\n\n        // Create a cancel token\n        this._cancelToken = axios.CancelToken.source();\n\n        let data = {\n          type: this.currentType,\n        };\n        if (this.namespace) {\n          data.namespace = this.namespace.replace(\n            /__TYPE__/g,\n            Craft.formatInputId(this.currentType)\n          );\n        }\n\n        Craft.sendActionRequest('POST', 'fields/render-settings', {\n          cancelToken: this._cancelToken.token,\n          data: data,\n        })\n          .then((response) => {\n            let $settings = $(response.data.settingsHtml || '');\n            if (this.settings.wrapWithTypeClassDiv) {\n              $settings = $('<div/>', {\n                id: Craft.formatInputId(this.currentType),\n              }).append($settings);\n            }\n            this.$container.html('').append($settings);\n            Craft.initUiElements(this.$container);\n            Craft.appendHeadHtml(response.data.headHtml);\n            Craft.appendBodyHtml(response.data.bodyHtml);\n          })\n          .catch(() => {\n            if (!this._ignoreFailedRequest) {\n              Craft.cp.displayError(Craft.t('app', 'A server error occurred.'));\n              this.$container.html('');\n            }\n          });\n      },\n    },\n    {\n      defaults: {\n        wrapWithTypeClassDiv: false,\n      },\n    }\n  );\n})(jQuery);\n"],"names":["$","jQuery","Craft","FieldSettingsToggle","Garnish","Base","extend","$toggle","$container","namespace","currentType","typeSettings","_cancelToken","_ignoreFailedRequest","init","toggle","container","settings","this","val","setSettings","defaults","addListener","handleToggleChange","cancel","requestAnimationFrame","children","detach","html","axios","CancelToken","source","data","type","replace","formatInputId","sendActionRequest","cancelToken","token","then","response","$settings","settingsHtml","wrapWithTypeClassDiv","id","append","initUiElements","appendHeadHtml","headHtml","appendBodyHtml","bodyHtml","cp","displayError","t","appendTo"],"sourceRoot":""}