{"version":3,"file":"sites.js","mappings":"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","sources":["webpack:///./sites.js"],"sourcesContent":["(function ($) {\n  /** global: Craft */\n  /** global: Garnish */\n  Craft.SitesAdmin = Garnish.Base.extend({\n    $groups: null,\n    $selectedGroup: null,\n\n    init: function () {\n      this.$groups = $('#groups');\n      this.$selectedGroup = this.$groups.find('a.sel:first');\n      this.addListener($('#newgroupbtn'), 'activate', 'addNewGroup');\n\n      var $groupSettingsBtn = $('#groupsettingsbtn');\n\n      if ($groupSettingsBtn.length) {\n        var menuBtn = $groupSettingsBtn.data('menubtn');\n\n        menuBtn.settings.onOptionSelect = (elem) => {\n          var $elem = $(elem);\n\n          if ($elem.hasClass('disabled')) {\n            return;\n          }\n\n          switch ($elem.data('action')) {\n            case 'rename': {\n              this.renameSelectedGroup();\n              break;\n            }\n            case 'delete': {\n              this.deleteSelectedGroup();\n              break;\n            }\n          }\n        };\n      }\n    },\n\n    addNewGroup: function () {\n      this.promptForGroupName('')\n        .then((name) => {\n          if (!name) {\n            return;\n          }\n\n          let data = {\n            name: name,\n          };\n\n          Craft.sendActionRequest('POST', 'sites/save-group', {data})\n            .then((response) => {\n              location.href = Craft.getUrl('settings/sites', {\n                groupId: response.data.group.id,\n              });\n            })\n            .catch(({response}) => {\n              if (response.data && response.data.errors) {\n                Craft.cp.displayError(\n                  Craft.t('app', 'Could not create the group:') +\n                    '\\n\\n' +\n                    response.data.errors.join('\\n')\n                );\n              } else {\n                Craft.cp.displayError();\n              }\n            });\n        })\n        .catch(() => {});\n    },\n\n    renameSelectedGroup: function () {\n      this.promptForGroupName(this.$selectedGroup.data('raw-name'))\n        .then((newName) => {\n          var data = {\n            id: this.$selectedGroup.data('id'),\n            name: newName,\n          };\n\n          Craft.sendActionRequest('POST', 'sites/save-group', {data})\n            .then((response) => {\n              this.$selectedGroup.text(response.data.group.name);\n              this.$selectedGroup.data('raw-name', newName);\n              Craft.cp.displaySuccess(Craft.t('app', 'Group renamed.'));\n            })\n            .catch(({response}) => {\n              if (response.data && response.data.errors) {\n                Craft.cp.displayError(\n                  Craft.t('app', 'Could not rename the group:') +\n                    '\\n\\n' +\n                    response.data.errors.join('\\n')\n                );\n              } else {\n                Craft.cp.displayError();\n              }\n            });\n        })\n        .catch(() => {});\n    },\n\n    promptForGroupName: function (oldName) {\n      return new Promise((resolve, reject) => {\n        Craft.sendActionRequest('POST', 'sites/rename-group-field', {\n          data: {name: oldName},\n        }).then((response) => {\n          let $form = $('<form/>', {class: 'modal prompt'}).appendTo(\n            Garnish.$bod\n          );\n          let $body = $('<div/>', {class: 'body'})\n            .append(response.data.html)\n            .appendTo($form);\n          let $buttons = $('<div/>', {class: 'buttons right'}).appendTo($body);\n          let $cancelBtn = $('<button/>', {\n            type: 'button',\n            class: 'btn',\n            text: Craft.t('app', 'Cancel'),\n          }).appendTo($buttons);\n          let $saveBtn = $('<button/>', {\n            type: 'submit',\n            class: 'btn submit',\n            text: Craft.t('app', 'Save'),\n          }).appendTo($buttons);\n\n          Craft.appendBodyHtml(response.data.js);\n\n          let success = false;\n          let modal = new Garnish.Modal($form, {\n            onShow: () => {\n              setTimeout(() => {\n                Craft.setFocusWithin($body);\n              }, 100);\n            },\n            onHide: () => {\n              if (!success) {\n                reject();\n              }\n            },\n          });\n\n          $form.on('submit', (ev) => {\n            ev.preventDefault();\n            let newName = $('.text', $body).val();\n            if (newName && newName !== oldName) {\n              resolve(newName);\n              success = true;\n            }\n            modal.hide();\n          });\n\n          $cancelBtn.on('click', () => {\n            modal.hide();\n          });\n        });\n      });\n    },\n\n    deleteSelectedGroup: function () {\n      if (\n        confirm(Craft.t('app', 'Are you sure you want to delete this group?'))\n      ) {\n        var data = {\n          id: this.$selectedGroup.data('id'),\n        };\n\n        Craft.sendActionRequest('POST', 'sites/delete-group', {data})\n          .then(() => {\n            location.href = Craft.getUrl('settings/sites');\n          })\n          .catch(() => {\n            Craft.cp.displayError();\n          });\n      }\n    },\n\n    flattenErrors: function (responseErrors) {\n      var errors = [];\n\n      for (var attribute in responseErrors) {\n        if (!responseErrors.hasOwnProperty(attribute)) {\n          continue;\n        }\n\n        errors = errors.concat(responseErrors[attribute]);\n      }\n\n      return errors;\n    },\n  });\n\n  Craft.SiteAdminTable = Craft.AdminTable.extend({\n    confirmDeleteModal: null,\n\n    $rowToDelete: null,\n    $deleteActionRadios: null,\n    $deleteSubmitBtn: null,\n\n    _deleting: false,\n\n    confirmDeleteItem: function ($row) {\n      if (this.confirmDeleteModal) {\n        this.confirmDeleteModal.destroy();\n        delete this.confirmDeleteModal;\n      }\n\n      this._createConfirmDeleteModal($row);\n\n      // Auto-focus the first radio\n      if (!Garnish.isMobileBrowser(true)) {\n        setTimeout(() => {\n          this.$deleteActionRadios.first().trigger('focus');\n        }, 100);\n      }\n\n      return false;\n    },\n\n    validateDeleteInputs: function () {\n      var validates =\n        this.$deleteActionRadios.eq(0).prop('checked') ||\n        this.$deleteActionRadios.eq(1).prop('checked');\n\n      if (validates) {\n        this.$deleteSubmitBtn.removeClass('disabled');\n      } else {\n        this.$deleteSubmitBtn.addClass('disabled');\n      }\n\n      return validates;\n    },\n\n    submitDeleteSite: function (ev) {\n      ev.preventDefault();\n\n      if (this._deleting || !this.validateDeleteInputs()) {\n        return;\n      }\n\n      this.$deleteSubmitBtn.addClass('loading');\n      this.disable();\n      this._deleting = true;\n\n      var data = {\n        id: this.getItemId(this.$rowToDelete),\n      };\n\n      // Are we transferring content?\n      if (this.$deleteActionRadios.eq(0).prop('checked')) {\n        data.transferContentTo = this.$transferSelect.val();\n      }\n\n      this.$deleteSubmitBtn.removeClass('loading');\n\n      Craft.sendActionRequest('POST', this.settings.deleteAction, {data}).then(\n        (response) => {\n          this._deleting = false;\n          this.enable();\n          this.confirmDeleteModal.hide();\n          this.handleDeleteItemSuccess(response.data, this.$rowToDelete);\n        }\n      );\n    },\n\n    _createConfirmDeleteModal: function ($row) {\n      this.$rowToDelete = $row;\n\n      let id = this.getItemId($row);\n      let name = this.getItemName($row);\n\n      let $form = $(\n        '<form id=\"confirmdeletemodal\" class=\"modal fitted\" method=\"post\" accept-charset=\"UTF-8\"/>'\n      ).appendTo(Garnish.$bod);\n      let $body = $(\n        '<div class=\"body\">' +\n          '<p>' +\n          Craft.t(\n            'app',\n            'What do you want to do with any content that is only available in {language}?',\n            {language: name}\n          ) +\n          '</p>' +\n          '<div class=\"options\">' +\n          '<label><input type=\"radio\" name=\"contentAction\" value=\"transfer\"/> ' +\n          Craft.t('app', 'Transfer it to:') +\n          '</label> ' +\n          '<div id=\"transferselect\" class=\"select\">' +\n          '<select/>' +\n          '</div>' +\n          '</div>' +\n          '<div>' +\n          '<label><input type=\"radio\" name=\"contentAction\" value=\"delete\"/> ' +\n          Craft.t('app', 'Delete it') +\n          '</label>' +\n          '</div>' +\n          '</div>'\n      ).appendTo($form);\n      let $buttons = $('<div class=\"buttons right\"/>').appendTo($body);\n      let $cancelBtn = $('<button/>', {\n        type: 'button',\n        class: 'btn',\n        text: Craft.t('app', 'Cancel'),\n      }).appendTo($buttons);\n\n      this.$deleteActionRadios = $body.find('input[type=radio]');\n      this.$transferSelect = $('#transferselect').find('> select');\n      this.$deleteSubmitBtn = Craft.ui\n        .createSubmitButton({\n          class: 'disabled',\n          label: Craft.t('app', 'Delete {site}', {site: name}),\n          spinner: true,\n        })\n        .appendTo($buttons);\n\n      for (var i = 0; i < Craft.sites.length; i++) {\n        if (Craft.sites[i].id != id) {\n          this.$transferSelect.append(\n            '<option value=\"' +\n              Craft.sites[i].id +\n              '\">' +\n              Craft.escapeHtml(Craft.sites[i].name) +\n              '</option>'\n          );\n        }\n      }\n\n      this.confirmDeleteModal = new Garnish.Modal($form);\n\n      this.addListener($cancelBtn, 'click', function () {\n        this.confirmDeleteModal.hide();\n      });\n\n      this.addListener(\n        this.$deleteActionRadios,\n        'change',\n        'validateDeleteInputs'\n      );\n      this.addListener($form, 'submit', 'submitDeleteSite');\n    },\n  });\n})(jQuery);\n"],"names":["$","jQuery","Craft","SitesAdmin","Garnish","Base","extend","$groups","$selectedGroup","init","this","find","addListener","$groupSettingsBtn","length","data","settings","onOptionSelect","elem","$elem","hasClass","renameSelectedGroup","deleteSelectedGroup","addNewGroup","promptForGroupName","then","name","sendActionRequest","response","location","href","getUrl","groupId","group","id","errors","cp","displayError","t","join","newName","text","displaySuccess","oldName","Promise","resolve","reject","$form","class","appendTo","$bod","$body","append","html","$buttons","$cancelBtn","type","appendBodyHtml","js","success","modal","Modal","onShow","setTimeout","setFocusWithin","onHide","on","ev","preventDefault","val","hide","confirm","flattenErrors","responseErrors","attribute","hasOwnProperty","concat","SiteAdminTable","AdminTable","confirmDeleteModal","$rowToDelete","$deleteActionRadios","$deleteSubmitBtn","_deleting","confirmDeleteItem","$row","destroy","_createConfirmDeleteModal","isMobileBrowser","first","trigger","validateDeleteInputs","validates","eq","prop","removeClass","addClass","submitDeleteSite","disable","getItemId","transferContentTo","$transferSelect","deleteAction","enable","handleDeleteItemSuccess","getItemName","language","ui","createSubmitButton","label","site","spinner","i","sites","escapeHtml"],"sourceRoot":""}