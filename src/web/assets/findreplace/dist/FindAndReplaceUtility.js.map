{"version":3,"file":"FindAndReplaceUtility.js","mappings":"YAAA,IAAWA,IAwFRC,OAvFDC,MAAMC,sBAAwBC,QAAQC,KAAKC,OAAO,CAChDC,SAAU,KACVC,MAAO,KAEPC,KAAM,SAAUC,GACdC,KAAKH,MAAQR,EAAE,IAAMU,GACrBC,KAAKJ,SAAWP,EAAE,eAAgBW,KAAKH,OACvCG,KAAKC,QAAUZ,EAAE,kBAAmBW,KAAKH,OAEzCG,KAAKE,YAAYF,KAAKH,MAAO,SAAU,WACzC,EAEAM,SAAU,SAAUC,GAAI,WACtBA,EAAGC,iBAEEL,KAAKJ,SAASU,SAAS,cACrBN,KAAKO,YAGRP,KAAKO,YAAYC,mBAFjBR,KAAKO,YAAc,IAAIhB,MAAMkB,YAAYT,KAAKC,SAKhDD,KAAKO,YAAYG,aAAaC,YAAY,UAE1CX,KAAKO,YAAYG,aAAaE,SAAS,QAAQA,SAC7C,CACEC,QAAS,GAEX,CACEC,SAAU,WACR,IAAIC,EAAWtB,QAAQuB,YAAY,EAAKnB,OACtCoB,EAAS1B,MAAM2B,gBAAgBH,GAE7BI,EAAO,CACTF,OAAQA,GAGV1B,MAAM6B,kBAAkB,OAAQH,EAAOI,OAAQ,CAACF,KAAAA,IAC7CG,MAAK,SAACC,GACL,EAAKC,oBACLC,WAAW,EAAKC,WAAWC,KAAK,GAAO,IACzC,IAAE,OACK,YAAgB,IAAdJ,EAAQ,EAARA,SACPhC,MAAMqC,GAAGC,aAAaN,EAASJ,KAAKW,QACtC,GACJ,IAIA9B,KAAK+B,UACP/B,KAAK+B,SAASC,IAAI,UAAW,GAG/BhC,KAAKJ,SAASqC,SAAS,YACvBjC,KAAKJ,SAASsC,QAAQ,QAE1B,EAEAV,kBAAmB,WAEjBxB,KAAKO,YAAY4B,sBADL,IAEd,EAEAT,WAAY,WAAY,WACjB1B,KAAK+B,WACR/B,KAAK+B,SAAW1C,EAAE,4CAA4C+C,SAC5DpC,KAAKC,SAEPD,KAAK+B,SAASC,IAAI,UAAW,IAG/BhC,KAAKO,YAAYG,aAAaE,SAC5B,CAACC,QAAS,GACV,CACEwB,SAAU,OACVvB,SAAU,WACR,EAAKiB,SAASnB,SAAS,CAACC,QAAS,GAAI,CAACwB,SAAU,SAChD,EAAKzC,SAASe,YAAY,YAC1B,EAAKf,SAASsC,QAAQ,QACxB,IAKJ3C,MAAMqC,GAAGU,kBAAiB,GAAO,EACnC,G","sources":["webpack:///./FindAndReplaceUtility.js"],"sourcesContent":["(function ($) {\n  Craft.FindAndReplaceUtility = Garnish.Base.extend({\n    $trigger: null,\n    $form: null,\n\n    init: function (formId) {\n      this.$form = $('#' + formId);\n      this.$trigger = $('input.submit', this.$form);\n      this.$status = $('.utility-status', this.$form);\n\n      this.addListener(this.$form, 'submit', 'onSubmit');\n    },\n\n    onSubmit: function (ev) {\n      ev.preventDefault();\n\n      if (!this.$trigger.hasClass('disabled')) {\n        if (!this.progressBar) {\n          this.progressBar = new Craft.ProgressBar(this.$status);\n        } else {\n          this.progressBar.resetProgressBar();\n        }\n\n        this.progressBar.$progressBar.removeClass('hidden');\n\n        this.progressBar.$progressBar.velocity('stop').velocity(\n          {\n            opacity: 1,\n          },\n          {\n            complete: () => {\n              var postData = Garnish.getPostData(this.$form),\n                params = Craft.expandPostArray(postData);\n\n              var data = {\n                params: params,\n              };\n\n              Craft.sendActionRequest('POST', params.action, {data})\n                .then((response) => {\n                  this.updateProgressBar();\n                  setTimeout(this.onComplete.bind(this), 300);\n                })\n                .catch(({response}) => {\n                  Craft.cp.displayError(response.data.message);\n                });\n            },\n          }\n        );\n\n        if (this.$allDone) {\n          this.$allDone.css('opacity', 0);\n        }\n\n        this.$trigger.addClass('disabled');\n        this.$trigger.trigger('blur');\n      }\n    },\n\n    updateProgressBar: function () {\n      var width = 100;\n      this.progressBar.setProgressPercentage(width);\n    },\n\n    onComplete: function () {\n      if (!this.$allDone) {\n        this.$allDone = $('<div class=\"alldone\" data-icon=\"done\" />').appendTo(\n          this.$status\n        );\n        this.$allDone.css('opacity', 0);\n      }\n\n      this.progressBar.$progressBar.velocity(\n        {opacity: 0},\n        {\n          duration: 'fast',\n          complete: () => {\n            this.$allDone.velocity({opacity: 1}, {duration: 'fast'});\n            this.$trigger.removeClass('disabled');\n            this.$trigger.trigger('focus');\n          },\n        }\n      );\n\n      // Just in case the tool created a new task...\n      Craft.cp.trackJobProgress(false, true);\n    },\n  });\n})(jQuery);\n"],"names":["$","jQuery","Craft","FindAndReplaceUtility","Garnish","Base","extend","$trigger","$form","init","formId","this","$status","addListener","onSubmit","ev","preventDefault","hasClass","progressBar","resetProgressBar","ProgressBar","$progressBar","removeClass","velocity","opacity","complete","postData","getPostData","params","expandPostArray","data","sendActionRequest","action","then","response","updateProgressBar","setTimeout","onComplete","bind","cp","displayError","message","$allDone","css","addClass","trigger","setProgressPercentage","appendTo","duration","trackJobProgress"],"sourceRoot":""}