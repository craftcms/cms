{"version":3,"file":"PasskeySetup.js","mappings":"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","sources":["webpack:///../../../../../node_modules/@simplewebauthn/browser/dist/bundle/index.js","webpack:///./PasskeySetup.js"],"sourcesContent":["/* [@simplewebauthn/browser@7.4.0] */\nfunction utf8StringToBuffer(value) {\n    return new TextEncoder().encode(value);\n}\n\nfunction bufferToBase64URLString(buffer) {\n    const bytes = new Uint8Array(buffer);\n    let str = '';\n    for (const charCode of bytes) {\n        str += String.fromCharCode(charCode);\n    }\n    const base64String = btoa(str);\n    return base64String.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=/g, '');\n}\n\nfunction base64URLStringToBuffer(base64URLString) {\n    const base64 = base64URLString.replace(/-/g, '+').replace(/_/g, '/');\n    const padLength = (4 - (base64.length % 4)) % 4;\n    const padded = base64.padEnd(base64.length + padLength, '=');\n    const binary = atob(padded);\n    const buffer = new ArrayBuffer(binary.length);\n    const bytes = new Uint8Array(buffer);\n    for (let i = 0; i < binary.length; i++) {\n        bytes[i] = binary.charCodeAt(i);\n    }\n    return buffer;\n}\n\nfunction browserSupportsWebAuthn() {\n    return (window?.PublicKeyCredential !== undefined && typeof window.PublicKeyCredential === 'function');\n}\n\nfunction toPublicKeyCredentialDescriptor(descriptor) {\n    const { id } = descriptor;\n    return {\n        ...descriptor,\n        id: base64URLStringToBuffer(id),\n        transports: descriptor.transports,\n    };\n}\n\nfunction isValidDomain(hostname) {\n    return (hostname === 'localhost' || /^([a-z0-9]+(-[a-z0-9]+)*\\.)+[a-z]{2,}$/i.test(hostname));\n}\n\nclass WebAuthnError extends Error {\n    code;\n    constructor({ message, code, cause, name, }) {\n        super(message, { cause });\n        this.name = name ?? cause.name;\n        this.code = code;\n    }\n}\n\nfunction identifyRegistrationError({ error, options, }) {\n    const { publicKey } = options;\n    if (!publicKey) {\n        throw Error('options was missing required publicKey property');\n    }\n    if (error.name === 'AbortError') {\n        if (options.signal instanceof AbortSignal) {\n            return new WebAuthnError({\n                message: 'Registration ceremony was sent an abort signal',\n                code: 'ERROR_CEREMONY_ABORTED',\n                cause: error,\n            });\n        }\n    }\n    else if (error.name === 'ConstraintError') {\n        if (publicKey.authenticatorSelection?.requireResidentKey === true) {\n            return new WebAuthnError({\n                message: 'Discoverable credentials were required but no available authenticator supported it',\n                code: 'ERROR_AUTHENTICATOR_MISSING_DISCOVERABLE_CREDENTIAL_SUPPORT',\n                cause: error,\n            });\n        }\n        else if (publicKey.authenticatorSelection?.userVerification === 'required') {\n            return new WebAuthnError({\n                message: 'User verification was required but no available authenticator supported it',\n                code: 'ERROR_AUTHENTICATOR_MISSING_USER_VERIFICATION_SUPPORT',\n                cause: error,\n            });\n        }\n    }\n    else if (error.name === 'InvalidStateError') {\n        return new WebAuthnError({\n            message: 'The authenticator was previously registered',\n            code: 'ERROR_AUTHENTICATOR_PREVIOUSLY_REGISTERED',\n            cause: error\n        });\n    }\n    else if (error.name === 'NotAllowedError') {\n        return new WebAuthnError({\n            message: error.message,\n            code: 'ERROR_PASSTHROUGH_SEE_CAUSE_PROPERTY',\n            cause: error,\n        });\n    }\n    else if (error.name === 'NotSupportedError') {\n        const validPubKeyCredParams = publicKey.pubKeyCredParams.filter(param => param.type === 'public-key');\n        if (validPubKeyCredParams.length === 0) {\n            return new WebAuthnError({\n                message: 'No entry in pubKeyCredParams was of type \"public-key\"',\n                code: 'ERROR_MALFORMED_PUBKEYCREDPARAMS',\n                cause: error,\n            });\n        }\n        return new WebAuthnError({\n            message: 'No available authenticator supported any of the specified pubKeyCredParams algorithms',\n            code: 'ERROR_AUTHENTICATOR_NO_SUPPORTED_PUBKEYCREDPARAMS_ALG',\n            cause: error,\n        });\n    }\n    else if (error.name === 'SecurityError') {\n        const effectiveDomain = window.location.hostname;\n        if (!isValidDomain(effectiveDomain)) {\n            return new WebAuthnError({\n                message: `${window.location.hostname} is an invalid domain`,\n                code: 'ERROR_INVALID_DOMAIN',\n                cause: error\n            });\n        }\n        else if (publicKey.rp.id !== effectiveDomain) {\n            return new WebAuthnError({\n                message: `The RP ID \"${publicKey.rp.id}\" is invalid for this domain`,\n                code: 'ERROR_INVALID_RP_ID',\n                cause: error,\n            });\n        }\n    }\n    else if (error.name === 'TypeError') {\n        if (publicKey.user.id.byteLength < 1 || publicKey.user.id.byteLength > 64) {\n            return new WebAuthnError({\n                message: 'User ID was not between 1 and 64 characters',\n                code: 'ERROR_INVALID_USER_ID_LENGTH',\n                cause: error,\n            });\n        }\n    }\n    else if (error.name === 'UnknownError') {\n        return new WebAuthnError({\n            message: 'The authenticator was unable to process the specified options, or could not create a new credential',\n            code: 'ERROR_AUTHENTICATOR_GENERAL_ERROR',\n            cause: error,\n        });\n    }\n    return error;\n}\n\nclass WebAuthnAbortService {\n    controller;\n    createNewAbortSignal() {\n        if (this.controller) {\n            const abortError = new Error('Cancelling existing WebAuthn API call for new one');\n            abortError.name = 'AbortError';\n            this.controller.abort(abortError);\n        }\n        const newController = new AbortController();\n        this.controller = newController;\n        return newController.signal;\n    }\n}\nconst webauthnAbortService = new WebAuthnAbortService();\n\nconst attachments = ['cross-platform', 'platform'];\nfunction toAuthenticatorAttachment(attachment) {\n    if (!attachment) {\n        return;\n    }\n    if (attachments.indexOf(attachment) < 0) {\n        return;\n    }\n    return attachment;\n}\n\nasync function startRegistration(creationOptionsJSON) {\n    if (!browserSupportsWebAuthn()) {\n        throw new Error('WebAuthn is not supported in this browser');\n    }\n    const publicKey = {\n        ...creationOptionsJSON,\n        challenge: base64URLStringToBuffer(creationOptionsJSON.challenge),\n        user: {\n            ...creationOptionsJSON.user,\n            id: utf8StringToBuffer(creationOptionsJSON.user.id),\n        },\n        excludeCredentials: creationOptionsJSON.excludeCredentials?.map(toPublicKeyCredentialDescriptor),\n    };\n    const options = { publicKey };\n    options.signal = webauthnAbortService.createNewAbortSignal();\n    let credential;\n    try {\n        credential = (await navigator.credentials.create(options));\n    }\n    catch (err) {\n        throw identifyRegistrationError({ error: err, options });\n    }\n    if (!credential) {\n        throw new Error('Registration was not completed');\n    }\n    const { id, rawId, response, type } = credential;\n    let transports = undefined;\n    if (typeof response.getTransports === 'function') {\n        transports = response.getTransports();\n    }\n    let responsePublicKeyAlgorithm = undefined;\n    if (typeof response.getPublicKeyAlgorithm === 'function') {\n        responsePublicKeyAlgorithm = response.getPublicKeyAlgorithm();\n    }\n    let responsePublicKey = undefined;\n    if (typeof response.getPublicKey === 'function') {\n        const _publicKey = response.getPublicKey();\n        if (_publicKey !== null) {\n            responsePublicKey = bufferToBase64URLString(_publicKey);\n        }\n    }\n    let responseAuthenticatorData;\n    if (typeof response.getAuthenticatorData === 'function') {\n        responseAuthenticatorData = bufferToBase64URLString(response.getAuthenticatorData());\n    }\n    return {\n        id,\n        rawId: bufferToBase64URLString(rawId),\n        response: {\n            attestationObject: bufferToBase64URLString(response.attestationObject),\n            clientDataJSON: bufferToBase64URLString(response.clientDataJSON),\n            transports,\n            publicKeyAlgorithm: responsePublicKeyAlgorithm,\n            publicKey: responsePublicKey,\n            authenticatorData: responseAuthenticatorData,\n        },\n        type,\n        clientExtensionResults: credential.getClientExtensionResults(),\n        authenticatorAttachment: toAuthenticatorAttachment(credential.authenticatorAttachment),\n    };\n}\n\nfunction bufferToUTF8String(value) {\n    return new TextDecoder('utf-8').decode(value);\n}\n\nasync function browserSupportsWebAuthnAutofill() {\n    const globalPublicKeyCredential = window.PublicKeyCredential;\n    return (globalPublicKeyCredential.isConditionalMediationAvailable !== undefined &&\n        globalPublicKeyCredential.isConditionalMediationAvailable());\n}\n\nfunction identifyAuthenticationError({ error, options, }) {\n    const { publicKey } = options;\n    if (!publicKey) {\n        throw Error('options was missing required publicKey property');\n    }\n    if (error.name === 'AbortError') {\n        if (options.signal instanceof AbortSignal) {\n            return new WebAuthnError({\n                message: 'Authentication ceremony was sent an abort signal',\n                code: 'ERROR_CEREMONY_ABORTED',\n                cause: error,\n            });\n        }\n    }\n    else if (error.name === 'NotAllowedError') {\n        return new WebAuthnError({\n            message: error.message,\n            code: 'ERROR_PASSTHROUGH_SEE_CAUSE_PROPERTY',\n            cause: error,\n        });\n    }\n    else if (error.name === 'SecurityError') {\n        const effectiveDomain = window.location.hostname;\n        if (!isValidDomain(effectiveDomain)) {\n            return new WebAuthnError({\n                message: `${window.location.hostname} is an invalid domain`,\n                code: 'ERROR_INVALID_DOMAIN',\n                cause: error,\n            });\n        }\n        else if (publicKey.rpId !== effectiveDomain) {\n            return new WebAuthnError({\n                message: `The RP ID \"${publicKey.rpId}\" is invalid for this domain`,\n                code: 'ERROR_INVALID_RP_ID',\n                cause: error,\n            });\n        }\n    }\n    else if (error.name === 'UnknownError') {\n        return new WebAuthnError({\n            message: 'The authenticator was unable to process the specified options, or could not create a new assertion signature',\n            code: 'ERROR_AUTHENTICATOR_GENERAL_ERROR',\n            cause: error,\n        });\n    }\n    return error;\n}\n\nasync function startAuthentication(requestOptionsJSON, useBrowserAutofill = false) {\n    if (!browserSupportsWebAuthn()) {\n        throw new Error('WebAuthn is not supported in this browser');\n    }\n    let allowCredentials;\n    if (requestOptionsJSON.allowCredentials?.length !== 0) {\n        allowCredentials = requestOptionsJSON.allowCredentials?.map(toPublicKeyCredentialDescriptor);\n    }\n    const publicKey = {\n        ...requestOptionsJSON,\n        challenge: base64URLStringToBuffer(requestOptionsJSON.challenge),\n        allowCredentials,\n    };\n    const options = {};\n    if (useBrowserAutofill) {\n        if (!(await browserSupportsWebAuthnAutofill())) {\n            throw Error('Browser does not support WebAuthn autofill');\n        }\n        const eligibleInputs = document.querySelectorAll(\"input[autocomplete*='webauthn']\");\n        if (eligibleInputs.length < 1) {\n            throw Error('No <input> with `\"webauthn\"` in its `autocomplete` attribute was detected');\n        }\n        options.mediation = 'conditional';\n        publicKey.allowCredentials = [];\n    }\n    options.publicKey = publicKey;\n    options.signal = webauthnAbortService.createNewAbortSignal();\n    let credential;\n    try {\n        credential = (await navigator.credentials.get(options));\n    }\n    catch (err) {\n        throw identifyAuthenticationError({ error: err, options });\n    }\n    if (!credential) {\n        throw new Error('Authentication was not completed');\n    }\n    const { id, rawId, response, type } = credential;\n    let userHandle = undefined;\n    if (response.userHandle) {\n        userHandle = bufferToUTF8String(response.userHandle);\n    }\n    return {\n        id,\n        rawId: bufferToBase64URLString(rawId),\n        response: {\n            authenticatorData: bufferToBase64URLString(response.authenticatorData),\n            clientDataJSON: bufferToBase64URLString(response.clientDataJSON),\n            signature: bufferToBase64URLString(response.signature),\n            userHandle,\n        },\n        type,\n        clientExtensionResults: credential.getClientExtensionResults(),\n        authenticatorAttachment: toAuthenticatorAttachment(credential.authenticatorAttachment),\n    };\n}\n\nasync function platformAuthenticatorIsAvailable() {\n    if (!browserSupportsWebAuthn()) {\n        return false;\n    }\n    return PublicKeyCredential.isUserVerifyingPlatformAuthenticatorAvailable();\n}\n\nexport { browserSupportsWebAuthn, browserSupportsWebAuthnAutofill, platformAuthenticatorIsAvailable, startAuthentication, startRegistration };\n","import {\n  browserSupportsWebAuthn,\n  platformAuthenticatorIsAvailable,\n} from '@simplewebauthn/browser';\nimport {startRegistration} from '@simplewebauthn/browser';\n\n/** global: Craft */\n/** global: Garnish */\nCraft.PasskeySetup = Garnish.Base.extend({\n  $passkeysTable: null,\n  $addPasskeyBtn: null,\n  $errors: null,\n\n  async init() {\n    this.$passkeysTable = $('#passkeys');\n    this.$addPasskeyBtn = $('#add-passkey-btn');\n    this.$errors = $('#passkey-errors');\n\n    if (\n      !browserSupportsWebAuthn() ||\n      !(await platformAuthenticatorIsAvailable())\n    ) {\n      const $container = $('<div class=\"readable\"/>');\n      $('<blockquote/>', {\n        class: 'note warning',\n        text: Craft.t('app', 'This browser doesn’t support passkeys.'),\n      }).appendTo($container);\n      this.$addPasskeyBtn.replaceWith($container);\n      return;\n    }\n\n    this.initTable();\n    this.addListener(this.$addPasskeyBtn, 'activate', 'createPasskey');\n  },\n\n  initTable() {\n    this.addListener(this.$passkeysTable.find('.delete'), 'activate', (ev) => {\n      ev.preventDefault();\n      const $button = $(ev.currentTarget);\n      this.deletePasskey($button.data('uid'), $button.data('name'));\n    });\n  },\n\n  updateTable(html) {\n    this.$passkeysTable.html(html);\n    this.initTable();\n  },\n\n  async createPasskey() {\n    if (this.$addPasskeyBtn.hasClass('loading')) {\n      return;\n    }\n\n    this.$addPasskeyBtn.addClass('loading');\n\n    try {\n      await (() =>\n        new Promise((resolve, reject) => {\n          try {\n            Craft.elevatedSessionManager.requireElevatedSession(\n              async () => {\n                await this.startRegistration();\n                resolve();\n              },\n              () => {\n                resolve();\n              },\n              Math.min(Craft.elevatedSessionDuration, 300)\n            );\n          } catch (e) {\n            reject(e);\n          }\n        }))();\n    } finally {\n      this.$addPasskeyBtn.removeClass('loading');\n    }\n  },\n\n  async startRegistration() {\n    // GET registration options from the endpoint that calls\n    let data;\n    try {\n      const response = await Craft.sendActionRequest(\n        'POST',\n        'auth/passkey-creation-options'\n      );\n      data = response.data;\n    } catch (e) {\n      Craft.cp.displayError(e?.response?.data?.message);\n      return;\n    }\n\n    let defaultName = this.browserName() + ' on ' + this.platformName();\n    const credentialName = prompt(\n      Craft.t('app', 'Enter a name for the passkey.'),\n      defaultName\n    );\n\n    if (credentialName === null) {\n      return;\n    }\n\n    let regResponse;\n\n    try {\n      regResponse = await startRegistration(data.options);\n    } catch (e) {\n      Craft.cp.displayError(e?.message);\n      return;\n    }\n\n    this.verifyRegistration(regResponse, credentialName);\n  },\n\n  async verifyRegistration(startRegistrationResponse, credentialName) {\n    let data;\n\n    try {\n      const response = await Craft.sendActionRequest(\n        'POST',\n        'auth/verify-passkey-creation',\n        {\n          data: {\n            credentials: JSON.stringify(startRegistrationResponse),\n            credentialName: credentialName,\n          },\n        }\n      );\n      data = response.data;\n    } catch (e) {\n      Craft.cp.displayError(e?.response?.data?.message);\n      return;\n    }\n\n    Craft.cp.displaySuccess(data.message);\n    this.updateTable(data.tableHtml);\n  },\n\n  async deletePasskey(uid, name) {\n    if (\n      !confirm(\n        Craft.t(\n          'app',\n          'Are you sure you want to delete the “{name}” passkey?',\n          {name}\n        )\n      )\n    ) {\n      return;\n    }\n\n    let data;\n\n    try {\n      const response = await Craft.sendActionRequest(\n        'POST',\n        'auth/delete-passkey',\n        {\n          data: {uid},\n        }\n      );\n      data = response.data;\n    } catch (e) {\n      Craft.cp.displayError(e?.response?.data?.message);\n      return;\n    }\n\n    Craft.cp.displaySuccess(data.message);\n    this.updateTable(data.tableHtml);\n  },\n\n  platformName() {\n    const platform = navigator.platform;\n\n    if (platform.indexOf('Mac') !== -1) {\n      return 'Mac';\n    }\n    if (platform.indexOf('iPhone') !== -1 || platform.indexOf('Pike')) {\n      return 'iPhone';\n    }\n    if (platform.indexOf('iPad') !== -1) {\n      return 'iPad';\n    }\n    if (platform.indexOf('iPod') !== -1) {\n      return 'iPod';\n    }\n    if (platform.indexOf('FreeBSD') !== -1) {\n      return 'FreeBSD';\n    }\n    if (platform.indexOf('Linux') !== -1) {\n      return 'Linux';\n    }\n    if (platform.indexOf('Win') !== -1) {\n      return 'Windows';\n    }\n    if (platform.indexOf('Nintendo') !== -1) {\n      return 'Nintendo';\n    }\n    if (platform.indexOf('SunOS') !== -1) {\n      return 'Solaris';\n    }\n    // in other cases - just use the full name returned by navigator.platform\n    return platform;\n  },\n\n  browserName() {\n    const userAgent = navigator.userAgent;\n\n    if (userAgent.match(/chrome|chromium|crios/i)) {\n      return 'Chrome';\n    }\n    if (userAgent.match(/firefox|fxios/i)) {\n      return 'Firefox';\n    }\n    if (userAgent.match(/safari/i)) {\n      return 'Safari';\n    }\n    if (userAgent.match(/opr\\//i)) {\n      return 'Opera';\n    }\n    if (userAgent.match(/edg/i)) {\n      return 'Edge';\n    }\n    if (userAgent.match(/trident/i)) {\n      return 'IE';\n    }\n    return 'Browser';\n  },\n});\n"],"names":["bufferToBase64URLString","buffer","bytes","Uint8Array","str","charCode","String","fromCharCode","btoa","replace","base64URLStringToBuffer","base64URLString","base64","padLength","length","padded","padEnd","binary","atob","ArrayBuffer","i","charCodeAt","browserSupportsWebAuthn","undefined","window","PublicKeyCredential","toPublicKeyCredentialDescriptor","descriptor","id","transports","WebAuthnError","Error","code","constructor","message","cause","name","super","this","webauthnAbortService","controller","createNewAbortSignal","abortError","abort","newController","AbortController","signal","attachments","toAuthenticatorAttachment","attachment","indexOf","async","creationOptionsJSON","value","options","publicKey","challenge","user","TextEncoder","encode","excludeCredentials","map","credential","navigator","credentials","create","err","error","AbortSignal","authenticatorSelection","requireResidentKey","userVerification","pubKeyCredParams","filter","param","type","effectiveDomain","location","hostname","test","rp","byteLength","identifyRegistrationError","rawId","response","responsePublicKeyAlgorithm","responsePublicKey","responseAuthenticatorData","getTransports","getPublicKeyAlgorithm","getPublicKey","_publicKey","getAuthenticatorData","attestationObject","clientDataJSON","publicKeyAlgorithm","authenticatorData","clientExtensionResults","getClientExtensionResults","authenticatorAttachment","platformAuthenticatorIsAvailable","isUserVerifyingPlatformAuthenticatorAvailable","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","Context","makeInvokeMethod","tryCatch","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","mark","setPrototypeOf","__proto__","awrap","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","_asyncToGenerator","fn","self","args","arguments","apply","Craft","PasskeySetup","Garnish","Base","extend","$passkeysTable","$addPasskeyBtn","$errors","init","_this","_callee","$container","_context","$","t0","class","text","appendTo","replaceWith","initTable","addListener","_this2","find","ev","preventDefault","$button","currentTarget","deletePasskey","data","updateTable","html","createPasskey","_this3","_callee3","_context3","hasClass","addClass","elevatedSessionManager","requireElevatedSession","_callee2","_context2","startRegistration","Math","min","elevatedSessionDuration","removeClass","_this4","_callee4","_e$response","defaultName","credentialName","regResponse","_context4","sendActionRequest","cp","displayError","browserName","platformName","prompt","t1","verifyRegistration","startRegistrationResponse","_this5","_callee5","_e$response2","_context5","JSON","stringify","displaySuccess","tableHtml","uid","_this6","_callee6","_e$response3","_context6","confirm","platform","userAgent","match"],"sourceRoot":""}